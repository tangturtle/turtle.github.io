<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo的图片上传与本地预览</title>
      <link href="/posts/3700746563.html"/>
      <url>/posts/3700746563.html</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-的图片上传与本地预览"><a href="#Hexo-的图片上传与本地预览" class="headerlink" title="Hexo 的图片上传与本地预览"></a>Hexo 的图片上传与本地预览</h1><h3 id="方案一-不推荐"><a href="#方案一-不推荐" class="headerlink" title="方案一 (不推荐)"></a>方案一 (不推荐)</h3><h4 id="全局资源文件夹"><a href="#全局资源文件夹" class="headerlink" title="全局资源文件夹"></a>全局资源文件夹</h4><p>即，将所有文章的资源统一用一个全局资源文件夹管理。</p><p>此方法的优点是比较简便，并且当多篇文章需要引用同一资源时，也比较方便。缺点是当文章很多时，各个文章的图片都在同一文件夹，不便管理。</p><h4 id="具体方法："><a href="#具体方法：" class="headerlink" title="具体方法："></a>具体方法：</h4><p>在 hexo 文件夹下的 source 目录下，新建一个文件夹叫 images(名字随意)，将要插入的图片放在该文件夹中。</p><p>在 md 文档内，使用 <code>![图片](图片链接地址 &quot;图片title&quot;)</code>的格式，圆括号内的链接地址写(&#x2F;images&#x2F;name.jpeg)。</p><p>这里的 &#x2F; 指的是根目录，对于 hexo，资源文件的根目录就是 source。</p><p>例如，在 md 文档中写：<code>![图片](/images/20.jpeg &quot;甘雨&quot;)</code><br>同时将“20.jpeg”这个图片文件放在 hexo 文件夹&#x2F;source&#x2F;images 下，则图片可以上传到博客。</p><p>(方案一摘自<a href="https://blog.csdn.net/2301_77285173/article/details/130189857">在 hexo 博客中插入图片的方法</a>)</p><h3 id="方案二-推荐"><a href="#方案二-推荐" class="headerlink" title="方案二 (推荐)"></a>方案二 (推荐)</h3><h4 id="文章资源文件夹"><a href="#文章资源文件夹" class="headerlink" title="文章资源文件夹"></a>文章资源文件夹</h4><p>对每一篇文章使用一个文件夹管理</p><h4 id="具体方法"><a href="#具体方法" class="headerlink" title="具体方法"></a>具体方法</h4><ol><li><p>修改 <code>_config.yml</code>文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 约第43行</span><br><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">marked:</span><br>  <span class="hljs-attr">prependRoot:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">postAsset:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure></li><li><p>之后你在 <code>hexo new &quot;title&quot;</code>创建新的文章时在 <code>.md</code>同级目录下生成同名文件夹，你可以在该文件夹下存放图片。</p></li><li><p>在对应的 <code>.md</code>文件内使用 <code>&#123;% asset_img image.jpg 这是一张图片 %&#125;</code>来显示图片</p></li></ol><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>方案二在本地预览 <code>.md</code>文件时，由于 <code>&#123;% asset_img image.jpg 这是一张图片 %&#125;</code>并非 markdown 语法，会导致本地无法正常预览解析，可以使用<a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>插件。</p><p>该插件允许用户在本地编辑 <code>.md</code>文件时使用 <code>![name](图片名称)</code>这一 markdown 语法以便本地预览，并在 <code>hexo g</code>时自动生成正确的链接</p><p>然而我们可以发现还是无法本地预览，因为图片和 <code>.md</code>文件本身不在同一级目录，所以我们还要对插件进行修改</p><h5 id="修改-hexo-renderer-marked"><a href="#修改-hexo-renderer-marked" class="headerlink" title="修改 hexo-renderer-marked"></a>修改 <code>hexo-renderer-marked</code></h5><p>对 <code>\node_modules\hexo-renderer-marked\lib\renderer.js</code> 进行修改</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//约第118行</span><br><br><span class="hljs-comment">// Prepend root to image path</span><br><span class="hljs-title function_">image</span>(<span class="hljs-params">href, title, text</span>) &#123;<br>    <span class="hljs-comment">// 从这里添加3行</span><br>    <span class="hljs-keyword">if</span> (href.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;\\&quot;</span>) &gt; -<span class="hljs-number">1</span>) &#123;<br>        href = href.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;\\&quot;</span>)[<span class="hljs-number">2</span>];<br>    &#125;<br><br>    <span class="hljs-comment">//...</span><br>    <span class="hljs-comment">//文件其他内容</span><br>    <span class="hljs-comment">//...</span><br>&#125;<br></code></pre></td></tr></table></figure><p>搞定，现在可以快乐的写博客了</p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件(夹)链接</title>
      <link href="/posts/1705464100.html"/>
      <url>/posts/1705464100.html</url>
      
        <content type="html"><![CDATA[<h1 id="在Windows上怎样为文件-夹-创建链接？"><a href="#在Windows上怎样为文件-夹-创建链接？" class="headerlink" title="在Windows上怎样为文件(夹)创建链接？"></a>在Windows上怎样为文件(夹)创建链接？</h1><h3 id="有关【链接】"><a href="#有关【链接】" class="headerlink" title="有关【链接】"></a>有关【链接】</h3><p>在Windows上的链接有三种：</p><ul><li>符号链接</li><li>硬链接</li><li>目录联接(软链接)</li></ul><p>它们有什么区别呢？</p><ol><li>符号链接是将自己链接到一个目标文件或目录的路径上。当系统识别到符号链接时，它会跳转到符号链接所指向的目标中去，而不改变此时的文件路径。<br><img src="/posts/1705464100/%E7%AC%A6%E5%8F%B7%E9%93%BE%E6%8E%A5.png" alt="符号链接"><br>符号链接从Vista开始得到支持，NTFS内置机制。适用于文件，目录。可以理解为另一种形式的快捷方式(shortcut)，文件大小为0字节和不占用空间。可以使用相对&#x2F;绝对路径，可以跨盘符，跨主机，可以使用UNC路径和网络驱动器。</li><li>硬链接和符号链接的原理完全不同，符号链接是指向目标路径的链接，而硬链接则是指向目标数据对象的链接。因为一个卷中的数据对象都有一个独一无二文件 ID，也可以说硬链接是指向目标文件 ID 的链接。<br><img src="/posts/1705464100/%E7%A1%AC%E9%93%BE%E6%8E%A5.png" alt="硬链接"><br>硬链接从Windows NT4开始得到支持，是NTFS内置机制，FAT32不支持。只适用于文件，只能使用绝对路径。本身无文件，不占用额外空间。hardlink与targetfile必须位于同一卷，可以简单理解成不能跨盘符。</li><li>目录链接通过<a href="https://learn.microsoft.com/zh-cn/windows/win32/fileio/reparse-points">重分析点</a>实现。<br>目录联接从Windows2000&#x2F;XP开始得到支持，是NTFS内置机制。只适用于目录。只能使用绝对路径。目录链接通过重分析点实现，目录链接可以跨卷，但是不能跨主机。</li></ol><h3 id="具体实现命令"><a href="#具体实现命令" class="headerlink" title="具体实现命令"></a>具体实现命令</h3><ol><li><p>Cmd</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">mklink &lt;链接类型&gt; &lt;链接路径&gt; &lt;链接目标&gt;<br><span class="hljs-comment">#&lt;链接类型&gt; 可选 /J /D /H</span><br></code></pre></td></tr></table></figure></li><li><p>PowerShell</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">New-Item</span> &lt;链接路径&gt; <span class="hljs-literal">-ItemType</span> &lt;链接类型&gt; <span class="hljs-literal">-Target</span> &lt;链接目标&gt;<br><span class="hljs-comment">#&lt;链接类型&gt; 可选 HardLink  SymbolicLink  Junction</span><br></code></pre></td></tr></table></figure></li></ol><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://www.cnblogs.com/czwy/p/18442267">Windows 中的硬链接、目录联接(软链接)、符号链接、快捷方式</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用命令 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
